---

- name: "PM2 | Checking folders"
  file:
    state: directory
    path: "{{ item.location }}"
    owner: "{{ fubarhouse_user }}"
    recurse: yes
  with_items: "{{ node_apps }}"
  when: node_apps.0 is defined

- name: "PM2 | Ensure repositories are up to date"
  git:
    repo: "{{ item.repository }}"
    dest: "{{ item.location }}"
    clone: yes
    update: yes
    force: yes
    accept_hostkey: yes
    version: master
  with_items: "{{ node_apps }}"
  when: node_apps.0 is defined

- name: "PM2 | Ensure application(s) are installed"
  shell: "{{ which_npm.stdout }} install --prefix {{ item.location }}"
  with_items: "{{ node_apps }}"
  when:
    - '"npm" in which_npm.stdout'
    - node_apps.0 is defined

- name: PM2 | Copying configuration file when asked
  copy:
    remote_src: yes
    src: "{{ item.location }}/{{ item.config.origin }}"
    dest: "{{ item.location }}/{{ item.config.destination }}"
    owner: "{{ fubarhouse_user }}"
  with_items: "{{ node_apps }}"
  when: item.config is defined and node_apps.0 is defined

- name: PM2 | Create databases when requested
  mysql_db:
    name: "{{ item.database.name }}"
    collation: "utf8_general_ci"
    encoding: "utf8"
    state: present
  with_items: "{{ node_apps }}"
  when: item.database.name is defined and node_apps.0 is defined

- name: PM2 | Import database if provided
  mysql_db:
    state: import
    name: "{{ item.database.name }}"
    target: "{{ item.location }}/{{ item.database.file }}"
  with_items: "{{ node_apps }}"
  when: item.database.file is defined and node_apps.0 is defined

- name: "PM2 | Kill daemon"
  shell: 'pm2 kill'
  changed_when: false
  failed_when: false
  when: pm2_clean_install != true

- name: "PM2 | Start daemon"
  shell: 'pm2 start'
  changed_when: false
  failed_when: false

- name: "PM2 | Ensure started"
  shell: "pm2 start {{ item.location }}/{{ item.start }} --name '{{ item.name }}' | cat"
  with_items: "{{ node_apps }}"
  when: node_apps.0 is defined

- name: "PM2 | Ensure application is registered"
  shell: "pm2 show '{{ item.name }}' | cat"
  with_items: "{{ node_apps }}"
  register: pm2_registered_apps
  changed_when: false

- name: "PM2 | Waiting for applications to load"
  wait_for:
    port: "{{ item.port }}"
    delay: 5
  with_items: "{{ node_apps }}"
  when: node_apps.0 is defined

- name: PM2 | Get status"
  uri:
    url: "http://127.0.0.1:{{ item.port }}"
    status_code: 200
  with_items: "{{ node_apps }}"
  retries: 5
  delay: 5
  ignore_errors: yes
  when: node_apps.0 is defined

- name: "PM2 | Reloading applications"
  shell: "pm2 reload '{{ item.name }}'"
  with_items: "{{ node_apps }}"
  ignore_errors: yes
  when: node_apps.0 is defined

- name: "PM2 | Flush logs"
  shell: "pm2 flush | cat"
  when: node_apps.0 is defined
